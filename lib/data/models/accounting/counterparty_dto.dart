import 'package:atras_data_parser/atras_data_parser.dart';

import '../../../domain/entities/common/counterparty.dart';

class CounterpartyDto extends Counterparty {
  CounterpartyDto(
      {
      required super.id,
      required super.address,
      required super.bankAccType,
      required super.bankCardNumber,
      required super.exchangeType,
      required super.cityId,
      required super.code,
      required super.nationalCode,
      required super.postalCode,
      required super.companyName,
      required super.sharePercentage,
      required super.foundationDate,
      required super.description,
      required super.creditCheck,
      required super.creditRial,
      required super.fax,
      required super.firstName,
      required super.groupValueId,
      required super.responsibleBoard,
      required super.isActive,
      required super.isBlackList,
      required super.isBoardMember,
      required super.isStaff,
      required super.isCustomer,
      required super.isInvestee,
      required super.isOther,
      required super.isPartner,
      required super.isSupply,
      required super.isFacilitator,
      required super.isReceiverFacility,
      required super.isDependent,
      required super.isIntermediary,
      required super.kind,
      required super.lastName,
      required super.name,
      required super.parentId,
      required super.passportNumber,
      required super.prefixId,
      required super.jobTitle,
      required super.shebaNumber,
      required super.registrationNumber,
      required super.nationality,
      required super.detailId,
      required super.tel,
      required super.type});

  factory CounterpartyDto.fromMap(Map<String, dynamic> map) {
    return CounterpartyDto(
      id: map.findAsInt('ID'),
      address: map.findAsString('Address'),
      bankAccType: map.findAsInt('BankAccType'),
      bankCardNumber: map.findAsString('BankCardNumber'),
      exchangeType: map.findAsInt('BoorsType'),
      cityId: map.findAsInt('CityID'),
      code: map.findAsInt('Code'),
      nationalCode: map.findAsString('CodeMeli'),
      postalCode: map.findAsString('CodePosti'),
      companyName: map.findAsString('CompanyName'),
      sharePercentage: map.findAsInt('DarsadSaham'),
      foundationDate: DateTime.parse(map.findAsString('DateTasis')),
      description: map.findAsString('Descriptions'),
      creditCheck: map.findAsInt('EtebarCheck'),
      creditRial: map.findAsInt('EtebarRial'),
      fax: map.findAsString('Fax'),
      firstName: map.findAsString('FirstName'),
      groupValueId: map.findAsInt('GroupValueID'),
      responsibleBoard: map.findAsString('HeiatModireMasouliat'),
      isActive: map.findAsBool('IsActive'),
      isBlackList: map.findAsBool('IsBlackList'),
      isBoardMember: map.findAsBool('IsHeiatModire'),
      isStaff: map.findAsBool('IsKarkonan'),
      isCustomer: map.findAsBool('IsMoshtari'),
      isInvestee: map.findAsBool('IsSarmayePazir'),
      isOther: map.findAsBool('IsSayer'),
      isPartner: map.findAsBool('IsShoraka'),
      isSupply: map.findAsBool('IsTamin'),
      isFacilitator: map.findAsBool('IsTashilatDahande'),
      isReceiverFacility: map.findAsBool('IsTashilatGirande'),
      isDependent: map.findAsBool('IsVabaste'),
      isIntermediary: map.findAsBool('IsVasete'),
      kind: map.findAsInt('Kind'),
      lastName: map.findAsString('LastName'),
      name: map.findAsString('Name'),
      parentId: map.findAsInt('ParentID'),
      passportNumber: map.findAsString('PassportNumber'),
      prefixId: map.findAsInt('PrefixID'),
      jobTitle: map.findAsString('Semat'),
      shebaNumber: map.findAsString('ShabaNumber'),
      registrationNumber: map.findAsString('ShomareSabt'),
      nationality: map.findAsString('Tabeyat'),
      detailId: map.findAsInt('TafziliID'),
      tel: map.findAsString('Tel'),
      type: map.findAsInt('Types'),
    );
  }

  Map<String, dynamic> toMap() {
    return <String, dynamic>{
      'ID': (id != 0) ? id : null,
      'Address': address,
      'BankAccType': bankAccType,
      'BankCardNumber': bankCardNumber,
      'BoorsType': exchangeType,
      'CityID': cityId,
      'Code': code,
      'CodeMeli': nationalCode,
      'CodePosti': postalCode,
      'CompanyName': companyName,
      'DarsadSaham': sharePercentage,
      'DateTasis': foundationDate.toString(),
      'Descriptions': description,
      'EtebarCheck': creditCheck,
      'EtebarRial': creditRial,
      'Fax': fax,
      'FirstName': firstName,
      'GroupValueID': groupValueId,
      'HeiatModireMasouliat': responsibleBoard,
      'IsActive': isActive,
      'IsBlackList': isBlackList,
      'IsHeiatModire': isBoardMember,
      'IsKarkonan': isStaff,
      'IsMoshtari': isCustomer,
      'IsSarmayePazir': isInvestee,
      'IsSayer': isOther,
      'IsShoraka': isPartner,
      'IsTamin': isSupply,
      'IsTashilatDahande': isFacilitator,
      'IsTashilatGirande': isReceiverFacility,
      'IsVabaste': isDependent,
      'IsVasete': isIntermediary,
      'Kind': kind,
      'LastName': lastName,
      'Name': name,
      'ParentID': parentId,
      'PassportNumber': passportNumber,
      'PrefixID': prefixId,
      'Semat': jobTitle,
      'ShabaNumber': shebaNumber,
      'ShomareSabt': registrationNumber,
      'Tabeyat': nationality,
      'TafziliID': detailId,
      'Tel': tel,
      'Types': type,
    }..removeWhere(
        (dynamic key, dynamic value) => value == '' || value == null);
  }
}

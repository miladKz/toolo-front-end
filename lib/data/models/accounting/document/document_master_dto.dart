import 'package:atras_data_parser/atras_data_parser.dart';
import 'package:toolo_gostar/domain/entities/accounting/document/document_master.dart';

class DocumentMasterDto extends DocumentMaster {
   DocumentMasterDto(
      {required super.id,
      required super.activeYear,
      required super.bargeTypeID,
      required super.bargeTypeName,
      required super.categoryID,
      required super.categoryName,
      required super.comment,
      required super.dateBarge,
      required super.dateBargeCustom,
      required super.description,
      required super.isActive,
      required super.modulesID,
      required super.modulesName,
      required super.mustBeReCreate,
      required super.number,
      required super.number2,
      required super.numberBarge,
      required super.numberCustom,
      required super.numberDaily,
      required super.numberMonthly,
      required super.persianDate,
      required super.persianTime,
      required super.saveTypeID,
      required super.saveTypeName,
      required super.tarazPrice,
      required super.totalPrice,
      required super.creditorSum,
      required super.debtorSum,
      required super.remaining,
      super.name});

  factory DocumentMasterDto.fromMap(Map<String, dynamic> map) {
    return DocumentMasterDto(
      id: map.findAsInt('ID'),
      activeYear: map.findAsString('ActiveYear'),
      bargeTypeID: map.findAsInt('BargeTypeID'),
      bargeTypeName: map.findAsString('BargeTypeName'),
      categoryID: map.findAsInt('CategoryID'),
      categoryName: map.findAsString('CategoryName'),
      dateBarge: map.findAsString('DateBarge'),
      dateBargeCustom: map.findAsString('DateBargeCustom'),
      description: map.findAsString('Description'),
      isActive: map.findAsBool('IsActive'),
      mustBeReCreate: map.findAsBool('mustBeReCreate'),
      number: map.findAsInt('Number'),
      number2: map.findAsInt('Number2'),
      numberBarge: map.findAsInt('NumberBarge'),
      numberCustom: map.findAsInt('NumberCustom'),
      numberDaily: map.findAsInt('NumberDaily'),
      numberMonthly: map.findAsInt('NumberMonthly'),
      saveTypeID: map.findAsInt('SaveTypeID'),
      saveTypeName: map.findAsString('SaveTypeName'),
      comment: map.findAsString('Comment'),
      persianDate: map.findAsString('PersianDate'),
      persianTime: map.findAsString('PersianTime'),
      tarazPrice: map.findAsDouble('TarazPrice'),
      totalPrice: map.findAsDouble('TotalPrice'),
      modulesID: map.findAsInt('ModulesID'),
      modulesName: map.findAsString('ModulesName'),
      creditorSum: 0,
      debtorSum: 0,
      remaining: 0,
    );
  }
}
